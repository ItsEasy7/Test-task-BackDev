version: "3.3"

services:

  api:
    build:
      context: .
    image: auth:latest
    env_file: ./process.env
    environment:
      SERVICES: api
      PORT: 3000
    networks:
        - auth_service
    depends_on:
      - redis
      - rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gw.rule=PathPrefix(`/`)"
      - "traefik.http.services.api-gw.loadbalancer.server.port=3000"
  
  postgres:
    image: dockerhub.timeweb.cloud/postgres:16.2
    restart: always
    env_file: ./process.env
    ports:
      - "5432:5432"
    volumes:
      - "$HOME/docker/volumes/postgres:/var/lib/postgresql/data"
    networks:
        - auth_service


  pgadmin:
    image: docker.io/dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: "hehe@mail.ru"
      PGADMIN_DEFAULT_PASSWORD: "qazedcXfe24"
      PGADMIN_LISTEN_PORT: 80 
    ports: 
      - 15432:80 
    volumes: 
      - data:/data
    depends_on: 
      - postgres 
    networks: 
        - auth_service
    
  redis:
    image: redis:alpine
    ports: 
      - "6379:6379"
    networks:
        - auth_service


  rabbitmq:
    image: "dockerhub.timeweb.cloud/rabbitmq:3.13.0-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - 'rabbitmq_data:/data'
    networks:
        - auth_service


  auth.service:
    build:
      context: .
    image: auth:latest
    restart: always
    env_file: ./process.env
    environment:
      SERVICES: auth.service.js
    volumes:
      - data:/data
      - ./monitoring/prometheus:/app/monitoring/prometheus
    expose:
      - 3030
    links:
      - postgres:16.2
    depends_on:
      - api
      - redis
      - rabbitmq
    networks:
        - auth_service

  openapi.service:
    build:
      context: .
    image: auth:latest
    restart: always
    env_file: ./process.env
    environment:
      SERVICES: openapi.service.js
    expose:
      - 3030
    volumes:
      - data:/data
      - /public/swagger:/swagger
    depends_on:
      - api
      - redis
      - rabbitmq
    networks:
      - auth_service

  traefik:
    image: traefik:v2.4
    command:
      - "--api.insecure=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - 3000:80
      - 3001:8070
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    links:
      - postgres:16.2
    networks:
        - auth_service

networks:
    auth_service:
      name: auth_service
      driver: bridge 
    internet:
      name: internet
      driver: bridge
volumes:
  data:
  pgadmin:
  rabbitmq_data: